module.exports = LocalStorage;

/**
 * Thin wrappen on top of local storage
 * @constructor
 * @param {string=} namespace Use a namespace to ensure storage doesn't clobber
 * other items
 * @example
 * var storage = new LocalStorage();
 * storage.set('awesome', { a: 123, b: 'hello' });
 *
 * // Outputs 'hello'
 * console.log(storage.get('awesome').b);
 */
function LocalStorage(namespace)
{
  this._namespace = namespace || 'LocalStorage:';
}

/**
 * @param {string} key
 * @return {any}
 */
LocalStorage.prototype.get = function(key)
{
  key = this._namespace + key;
  return JSON.parse(localStorage.getItem(key));
};

/**
 * @param {string} key
 * @param {any} value
 */
LocalStorage.prototype.set = function(key, value)
{
  key = this._namespace + key;
  return localStorage.setItem(key, JSON.stringify(value));
};

/**
 * @param {string} key
 */
LocalStorage.prototype.remove = function(key)
{
  key = this._namespace + key;
  return localStorage.removeItem(key);
};
